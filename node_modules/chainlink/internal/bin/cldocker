#!/bin/bash -e

# Runs a Chainlink node preconfigured to communicate with gethnet, via docker.
# Steps:
# 1. ./internal/bin/gethnet
# 2. ./internal/bin/cldocker

GIT_ROOT=`git rev-parse --show-toplevel`
PROJECT_ROOT=${TRAVIS_BUILD_DIR:-$GIT_ROOT}
TAG=${TAG:-latest}
REPO="smartcontract/chainlink"
if [ "$SGX_ENABLED" == "yes" ]; then
  REPO+="-sgx"
fi
DOCKER="docker run -ti \
    --net host \
    --sysctl net.ipv6.conf.all.disable_ipv6=1 \
    --env LOG_LEVEL \
    --env ETH_URL \
    --env ETH_CHAIN_ID \
    --env TX_MIN_CONFIRMATIONS \
    --env MINIMUM_CONTRACT_PAYMENT \
    --env CHAINLINK_DEV \
    --volume $PROJECT_ROOT/internal/clroot:/root/.chainlink \
    $REPO:$TAG"

source $PROJECT_ROOT/internal/bin/clenv
export ETH_URL="ws://docker.for.mac.localhost:$ETH_PORT"
if [ "$#" == 0 ]; then
  $DOCKER node -d -p /root/.chainlink/password.txt -a /root/.chainlink/apicredentials
elif [ "$1" == "node" ]; then
  $DOCKER node -d -p /root/.chainlink/password.txt -a /root/.chainlink/apicredentials ${@:2}
elif [ "$1" == "clean" ]; then
  rm -f $PROJECT_ROOT/internal/clroot/{db.bolt,log.jsonl}
else
  $DOCKER ${@}
fi
